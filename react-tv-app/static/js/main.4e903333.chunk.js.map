{"version":3,"sources":["img/error.svg","redux/listMovies/actions.js","redux/listMovies/reducers.js","redux/paramsMovies/actions.js","redux/paramsMovies/reducers.js","redux/reducers.js","components/navBar/name/index.js","components/navBar/year/index.js","components/navBar/sort/index.js","APIs/getPicturesAPI.js","components/navBar/helpFun/getPictures.js","APIs/getSimilarMovieAPI.js","components/navBar/helpFun/getSimilar.js","APIs/getTrailerAPI.js","components/navBar/helpFun/getTrailer.js","APIs/getMovieAPI.js","components/navBar/navBar.jsx","components/navBar/index.js","components/items/pagination.jsx","components/items/similar.jsx","components/items/videoPlayeer.jsx","components/items/movie.jsx","components/items/helpFun/conditionImg.js","components/items/listMovies.jsx","components/items/index.js","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","setListMovie","listMovie","type","payload","setPicturesMovie","pict","setListSimilarMovie","listSimilarMOvie","setCurrentPage","page","setTrailerForMovie","trailers","defaultState","listOfMovie","listOfPictures","listOfSimilarMovie","firstLoad","currentPage","moviePerPage","setName","name","years","sort","combineReducers","listMovies","state","action","paramsMovies","NavBarName","onKeyPress","this","props","onSearchClick","placeholder","React","Component","NavBarYears","className","htmlFor","onChange","getValueYears","onSearchClickYears","max","min","NavBarSort","list","onInput","onChooseInput","id","getPicturesForMovie","a","axios","get","result","data","posters","filePath","file_path","picturesPath","console","error","getPictures","pic","item","movie","ids","tmdb","push","getSimilarMovies","results","getSimilar","sim","getTrailerForMovie","fileKey","key","trailerPath","getTrailer","getListOfMovies","year","params","query","headers","NavBar","pictures","similarMovie","trailerMovie","saveMovieList","savePicturesInState","saveSimilarMovieInState","saveTrailerForMovie","e","which","target","value","setMovieWithAllData","checkInFirstLoad","valueLength","parseInt","length","style","color","setYears","setSort","listForSort","listForReset","log","sortMethod","b","reverse","NavBarContainer","mapDispatchToProps","boolean","connect","Pagination","pageNumbers","i","Math","ceil","totalMovie","map","pageNumb","href","onClick","preventDefault","paginate","Similar","listPictures","similar","film","onReSearchClick","title","VideoPlayeer","preloaderRef","createRef","customModalWindowRef","overlayRef","setTimeout","current","opacity","visibility","display","trailer","childNodes","contentWindow","postMessage","ref","openYoutubePlayeer","onLoad","preloader","conditionClassName","src","conditionUrl","alt","closeButton","width","height","frameBorder","allowFullScreen","Movie","url","undefined","conditionImg","ListMovies","currentMovies","index","currentSimilar","indexOfFirstMovie","splice","trakt","MovieContainer","indexOfLastMovie","slice","pageNumber","store","createStore","rootReducer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4e903333.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/error.533ab57e.svg\";","export const PUT_LIST_OF_FILM_NAME = 'PUT_LIST_OF_FILM_NAME';\nexport const PUT_PICTURES_FOR_MOVIE = 'PUT_PICTURES_FOR_MOVIE';\nexport const PUT_SIMILAR_MOVIE = 'PUT_SIMILAR_MOVIE';\nexport const CHANGE_CURRENT_PAGE = 'CHANGE_CURRENT_PAGE';\nexport const CHANGE_FIRST_LOAD_APP = 'CHANGE_FIRST_LOAD_APP';\nexport const PUT_LIFT_OF_TRAILER_FOR_MOVIE = 'PUT_LIFT_OF_TRAILER_FOR_MOVIE';\n\n\n\nexport const setListMovie = (listMovie)=>({\n    type: PUT_LIST_OF_FILM_NAME,\n    payload: listMovie,\n})\nexport const setPicturesMovie = (pict)=>({\n    type: PUT_PICTURES_FOR_MOVIE,\n    payload: pict,\n})\nexport const setListSimilarMovie = (listSimilarMOvie)=>({\n    type: PUT_SIMILAR_MOVIE,\n    payload: listSimilarMOvie,\n})\nexport const setCurrentPage = (page)=>({\n    type: CHANGE_CURRENT_PAGE,\n    payload: page,\n})\nexport const checkInFirstLoad = (boolean)=>({\n    type: CHANGE_FIRST_LOAD_APP,\n    payload: boolean,\n})\nexport const setTrailerForMovie = (trailers)=>({\n    type: PUT_LIFT_OF_TRAILER_FOR_MOVIE,\n    payload: trailers,\n})\n","import { \n    PUT_LIST_OF_FILM_NAME,\n    PUT_PICTURES_FOR_MOVIE,\n    PUT_SIMILAR_MOVIE,\n    CHANGE_CURRENT_PAGE,\n    CHANGE_FIRST_LOAD_APP,\n    PUT_LIFT_OF_TRAILER_FOR_MOVIE\n                            } from './actions'\n\nconst defaultState = {\n    listOfMovie: [],\n    listOfPictures: [],\n    listOfSimilarMovie: [],\n    trailers: [],\n    firstLoad: true,\n    currentPage: 1,\n    moviePerPage: 5,\n}\n\nexport const putMoviesReducers = (state = defaultState, action)=>{\n    // eslint-disable-next-line default-case\n    switch( action.type ){\n        case PUT_LIST_OF_FILM_NAME:\n            return {\n                ...state,\n                listOfMovie: action.payload,\n            }\n        // eslint-disable-next-line no-duplicate-case\n        case PUT_PICTURES_FOR_MOVIE:\n            return {\n                ...state,\n                listOfPictures: action.payload,\n            }\n        // eslint-disable-next-line no-duplicate-case\n        case PUT_SIMILAR_MOVIE:\n            return {\n                ...state,\n                listOfSimilarMovie: action.payload,\n            }\n        // eslint-disable-next-line no-duplicate-case\n        case CHANGE_CURRENT_PAGE:\n            return {\n            ...state,\n            currentPage: action.payload,\n            }\n        // eslint-disable-next-line no-duplicate-case\n        case CHANGE_FIRST_LOAD_APP:\n            return {\n            ...state,\n            firstLoad: action.payload,\n            }\n        // eslint-disable-next-line no-duplicate-case\n        case PUT_LIFT_OF_TRAILER_FOR_MOVIE:\n            return {\n            ...state,\n            trailers: action.payload,\n            }\n    }\n    return state;\n}\n","export const PUT_YEARS_FOR_MOVIE = 'PUT_YEARS_FOR_MOVIE';\nexport const PUT_NAME_FOR_MOVIE = 'PUT_NAME_FOR_MOVIE';\nexport const PUT_CHOOSE_SORT_FOR_MOVIE = 'PUT_CHOOSE_SORT_FOR_MOVIE';\n\nexport const setYears = (year)=>({\n    type: PUT_YEARS_FOR_MOVIE,\n    payload: year,\n})\nexport const setName = (name)=>({\n    type: PUT_NAME_FOR_MOVIE,\n    payload: name,\n})\nexport const setSort = (sort)=>({\n    type: PUT_CHOOSE_SORT_FOR_MOVIE,\n    payload: sort,\n})","import { \n    PUT_YEARS_FOR_MOVIE,\n    PUT_NAME_FOR_MOVIE,\n    PUT_CHOOSE_SORT_FOR_MOVIE,\n } from './actions'\nconst defaultState = {\n    name:'',\n    years: '',\n    sort: '',\n}\n\nexport const putParamsMovies = (state = defaultState, action)=>{\n    // eslint-disable-next-line default-case\n    switch(action.type){\n         // eslint-disable-next-line no-duplicate-case\n         case PUT_YEARS_FOR_MOVIE:\n            return {\n            ...state,\n            years: action.payload,\n            }\n        // eslint-disable-next-line no-duplicate-case\n        case PUT_NAME_FOR_MOVIE:\n            return {\n            ...state,\n            name: action.payload,\n            }\n        // eslint-disable-next-line no-duplicate-case\n        case PUT_CHOOSE_SORT_FOR_MOVIE:\n            return {\n            ...state,\n            sort: action.payload,\n            }\n    }\n    return state;\n}","import { combineReducers } from 'redux';\nimport { putMoviesReducers } from './listMovies/reducers'\nimport { putParamsMovies } from './paramsMovies/reducers';\n\nexport default combineReducers({\n    listMovies: putMoviesReducers,\n    paramsMovies: putParamsMovies,\n})\n\n\n","import React from 'react';\n\nclass NavBarName extends React.Component{\n    render(){\n        return(\n            <input  type=\"text\" \n                        name=\"searchFilm\" \n                        onKeyPress={this.props.onSearchClick}\n                        placeholder=\"Movie title\"\n                />\n        )\n    }\n}\n\nexport default NavBarName;","import React from 'react';\n\nclass NavBarYears extends React.Component{\n    render(){\n        return(\n            <div className=\"wrapYearsForm\">\n                    <label htmlFor=\"years\">optional</label>\n                    <input type=\"number\"\n                        name=\"years\"\n                        placeholder=\"Choose the year\"\n                        onChange = { this.props.getValueYears }\n                        onKeyPress = { this.props.onSearchClickYears }\n                        max=\"2019\"\n                        min=\"1970\" />\n                </div>\n        )\n    }\n}\n\nexport default NavBarYears;","import React from 'react';\n\nclass NavBarSort extends React.Component{\n    render(){\n        return(\n            <div className=\"wrapSort\">\n                <label htmlFor=\"sort\">optional</label>\n                <input list=\"sortMethod\"\n                        placeholder=\"Sort\"\n                        onInput={this.props.onChooseInput}/>\n                <datalist id=\"sortMethod\">\n                    <option>By newest</option>\n                    <option>By oldest</option>\n                </datalist>\n            </div>\n        )\n    }\n}\n\nexport default NavBarSort;","import axios from 'axios';\n\n\nexport async function getPicturesForMovie(id){\nlet picturesPath ;\ntry{\n    const result = await axios\n    .get(`https://api.themoviedb.org/3/movie/${id}/images?api_key=ee05a415e10d527c5496fb485215ff75`);\n    if(result.data.posters[0]){\n        const filePath = result.data.posters[0].file_path;\n        picturesPath = `https://image.tmdb.org/t/p/w500${filePath}`;\n    }else{\n        picturesPath = ''\n    } \n}catch(e){\n    console.error(e);\n}\n\n\nreturn picturesPath;\n}","import { getPicturesForMovie } from '../../../APIs/getPicturesAPI'\n\nexport async function getPictures (result){\n    const pic = []\n    for(let item of result){\n        pic.push( await getPicturesForMovie( item.movie.ids.tmdb ));\n    }\n    return pic;\n}\n","import axios from 'axios';\n\n\nexport async function getSimilarMovies(id){\n    let result = [];\n    try{\n        result = await axios.get(\n            `https://api.themoviedb.org/3/movie/${id}/similar?api_key=ee05a415e10d527c5496fb485215ff75&page=1`\n        );\n        if(result){\n            return result.data.results;\n        }\n    }catch(e){\n        console.error(e)\n    }\n     return result;\n}\n","import { getSimilarMovies } from '../../../APIs/getSimilarMovieAPI';\n\nexport async function getSimilar (result){\n    const sim = []\n    for(let item of result){\n        sim.push( await getSimilarMovies( item.movie.ids.tmdb ));\n    }\n    return sim;\n}","import axios from 'axios';\n\n\nexport async function getTrailerForMovie(id){\nlet trailerPath ;\ntry{\n    const result = await axios\n    .get(`https://api.themoviedb.org/3/movie/${id}/videos?api_key=ee05a415e10d527c5496fb485215ff75`);\n    if(result){\n        const fileKey = result.data.results[0].key;\n        trailerPath = `https://www.youtube.com/embed/${fileKey}?autoplay=1&controls=0&enablejsapi=1&rel=0`;\n    }else{\n        trailerPath = ''\n    } \n}catch(e){\n    // console.error(e);\n}\n\nreturn trailerPath;\n}","import { getTrailerForMovie } from '../../../APIs/getTrailerAPI'\n\nexport async function getTrailer (result){\n    const pic = []\n    for(let item of result){\n        pic.push( await getTrailerForMovie( item.movie.ids.tmdb ));\n    }\n    return pic;\n}\n","import axios from 'axios';\n\n\nexport async function getListOfMovies(name, year){\n    let params = {};\n    if(year){\n        params = {\n            query: `${name}`,\n            years: `${year}`\n        }\n    }else{\n        params = {\n            query: `${name}`,\n        }\n    }\n\n    const result = await axios.get('https://api.trakt.tv/search/movie/',{\n    params: params,\n    headers:{\n        \"trakt-api-key\": \"f50bcef04ebc3c6fea696a2573403d0a06b8b22ebc44ebb002f93572418bef46\",\n        \"Content-type\": \"application/json\",\n        \"trakt-api-version\": 2,\n    }\n});\nreturn result.data;\n}\n\n","import React from 'react';\nimport NavBarName from './name';\nimport NavBarYears from './year';\nimport NavBarSort from './sort';\nimport { getPictures } from './helpFun/getPictures'\nimport { getSimilar } from './helpFun/getSimilar'\nimport { getTrailer } from './helpFun/getTrailer'\nimport { getListOfMovies } from '../../APIs/getMovieAPI';\n\nclass NavBar extends React.Component{\n//---------------------------------------Additional function-------------------------------------\nasync savePicturesInState( result ){\n    if( this.props.listOfPictures ){\n        await this.props.setPicturesMovie( [] );\n    }\n    const pictures = await getPictures( result );\n    await this.props.setPicturesMovie( pictures );\n}\n\n\nasync saveSimilarMovieInState( result ){\n    const similarMovie = await getSimilar( result );\n    await this.props.setListSimilarMovie( similarMovie );\n}\n\n\nasync saveMovieList(){\n    if( this.props.years ){\n        //Code save data in state (List of MOVIE with YEAR)\n        const result = await getListOfMovies( this.props.name, this.props.years );\n        await this.props.setListMovie( result );\n        return result;\n    }else{\n        //Code save data in state (List of MOVIE)\n        const result = await getListOfMovies( this.props.name );\n        await this.props.setListMovie( result );\n        return result;\n    }\n}\nasync saveTrailerForMovie(result){\n    const trailerMovie = await getTrailer( result );\n    await this.props.setTrailerForMovie( trailerMovie );\n}\n\n\nasync setMovieWithAllData(){\n    await this.props.setCurrentPage(1);\n    const result = await this.saveMovieList();\n\n    //Code save data in state (PICTURES for movie)\n    this.savePicturesInState( result );\n        \n    //Code save data in state (List of SIMILAR movie)\n    this.saveSimilarMovieInState( result );\n\n    //Code save data in state (List of TRAILER for movie)\n    this.saveTrailerForMovie( result );\n}\n\n\n//---------------------------------------MAIN function-------------------------------------\nasync onSearchClick(e){\n    if( e.which === 13 ){\n        await this.props.setName( e.target.value );        \n        await this.setMovieWithAllData();\n    }\n}\nasync firstLoadingApp (){\n    await this.props.setName('');        \n    await this.setMovieWithAllData();\n    await this.props.checkInFirstLoad(false);\n}\n\n\n\nasync getValueYears(e){\n    let valueLength = parseInt( e.target.value.length );\n\n    if( valueLength > 4 ){\n        e.target.style.color = '#e17055';\n\n    // eslint-disable-next-line no-cond-assign\n    }else if( valueLength < 4 && valueLength >= 1 ){\n        e.target.style.color = '#e17055';\n\n    // eslint-disable-next-line no-cond-assign\n    }else if( valueLength === 4 ){\n        e.target.style.color = '#00b894';\n        await this.props.setYears( e.target.value );\n    \n    // eslint-disable-next-line no-cond-assign\n    }else if( valueLength === 0 ){\n        await this.props.setYears('');\n    }\n}\n\n\nonSearchClickYears(e){\n    if(e.which === 13){\n        this.setMovieWithAllData();\n    }\n}\n\n\nasync onChooseInput(e){\n    await this.props.setSort( e.target.value );\n    const listForSort = [ ...this.props.listOfMovie ];\n    const listForReset = [ ...this.props.listOfMovie ];\n    console.log(listForReset);\n    console.log(this.props.listOfMovie)\n    const sortMethod = (a, b)=>{\n        //Return by oldest\n        return( a.movie.year - b.movie.year)\n    }\n    await listForSort.sort( sortMethod );\n\n    if(this.props.sort === 'By newest'){\n        await listForSort.reverse();\n        await this.props.setListMovie( listForSort );\n\n        //Code save data in state (PICTURES for movie)\n        this.savePicturesInState( listForSort );\n\n        //Code save data in state (List of SIMILAR movie)\n        this.saveSimilarMovieInState( listForSort );\n\n    }else if(this.props.sort === 'By oldest'){\n        await this.props.setListMovie( listForSort );\n\n        //Code save data in state (PICTURES for movie)\n        this.savePicturesInState( listForSort );\n\n        //Code save data in state (List of SIMILAR movie)\n        this.saveSimilarMovieInState( listForSort );\n    }\n}\n\n\nrender() {\n    return(\n        <div className='setting' id=\"navBarSetting\">\n                <NavBarName onSearchClick={ (e)=>{ this.onSearchClick(e) }}/>\n                <NavBarYears getValueYears={ (e)=>{ this.getValueYears(e) }}\n                             onSearchClickYears={ (e)=>{ this.onSearchClickYears(e) }}/>\n                <NavBarSort onChooseInput={ (e)=>{ this.onChooseInput(e) }}/>\n        </div>\n    )\n}}\nexport default NavBar;","import React from 'react';\nimport { connect } from 'react-redux';\nimport NavBar from './navBar';\nimport { setListMovie, \n         setPicturesMovie, \n         setListSimilarMovie, \n         checkInFirstLoad,\n         setTrailerForMovie,\n         setCurrentPage      } from '../../redux/listMovies/actions';\nimport {\n    setYears, \n    setName,\n    setSort,\n} from '../../redux/paramsMovies/actions';\n\nclass NavBarContainer extends React.Component{\nrender() {\n    return(\n        <NavBar name = { this.props.name }\n                years = { this.props.years }\n                listOfMovie = { this.props.listOfMovie }\n                sort = { this.props.sort }\n                setListMovie = { this.props.setListMovie }\n                setPicturesMovie = { this.props.setPicturesMovie }\n                setListSimilarMovie = { this.props.setListSimilarMovie }\n                setYears = { this.props.setYears } \n                setName = { this.props.setName }\n                setSort = { this.props.setSort }\n                checkInFirstLoad = { this.props.checkInFirstLoad }\n                listOfPictures = { this.props.listOfPictures }\n                setTrailerForMovie = { this.props.setTrailerForMovie }\n                setCurrentPage = { this.props.setCurrentPage } />\n    )\n}}\n\nconst mapStateToProps = state =>{\n    return {\n        name: state.paramsMovies.name,\n        years: state.paramsMovies.years,\n        listOfMovie: state.listMovies.listOfMovie,\n        sort: state.paramsMovies.sort,\n        listOfPictures: state.listMovies.listOfPictures\n    };\n};\nconst mapDispatchToProps = {\n    setListMovie,\n    setPicturesMovie,\n    setListSimilarMovie,\n    setYears,\n    setName,\n    setSort,\n    checkInFirstLoad,\n    setTrailerForMovie,\n    setCurrentPage\n};\n\nexport default connect( mapStateToProps, mapDispatchToProps )(NavBarContainer);","import React from 'react';\n\nclass Pagination extends React.Component{\nrender(){\n    const pageNumbers = [];\n\n    for(let i = 1; i <= Math.ceil(this.props.totalMovie / this.props.moviePerPage); i++){\n        pageNumbers.push(i);\n    }\n    return (\n        <div>\n            <div className=\"pagination\">\n                {pageNumbers.map( pageNumb => (\n                    <a href=\"#navBarSetting\" \n                       className=\"pageLink\" \n                       key={pageNumb}\n                       onClick={(e)=>{ e.preventDefault();\n                                       this.props.paginate(pageNumb)  }}>\n                        {pageNumb}\n                    </a>\n                ))}\n            </div>\n        </div>\n    )\n}\n}\n\nexport default Pagination;","import React from 'react';\nimport { getPictures } from '../navBar/helpFun/getPictures'\nimport { getSimilar } from '../navBar/helpFun/getSimilar'\nimport { getTrailer } from '../navBar/helpFun/getTrailer'\nimport { getListOfMovies } from '../../APIs/getMovieAPI';\n\n\nclass Similar extends React.Component{\n\n    async savePicturesInState( result ){\n        if( this.props.listPictures ){\n            await this.props.setPicturesMovie( [] );\n        }\n        const pictures = await getPictures( result );\n        await this.props.setPicturesMovie( pictures );\n    }\n    \n    \n    async saveSimilarMovieInState( result ){\n        const similarMovie = await getSimilar( result );\n        await this.props.setListSimilarMovie( similarMovie );\n    }\n    \n    \n    async saveMovieList(){\n        if( this.props.years ){\n            //Code save data in state (List of MOVIE with YEAR)\n            const result = await getListOfMovies( this.props.name, this.props.years );\n            await this.props.setListMovie( result );\n            return result;\n        }else{\n            //Code save data in state (List of MOVIE)\n            const result = await getListOfMovies( this.props.name );\n            await this.props.setListMovie( result );\n            return result;\n        }\n    }\n    async saveTrailerForMovie(result){\n        const trailerMovie = await getTrailer( result );\n        await this.props.setTrailerForMovie( trailerMovie );\n    }\n    \n    \n    async setMovieWithAllData(){\n        await this.props.setCurrentPage(1)\n        const result = await this.saveMovieList();\n    \n        //Code save data in state (PICTURES for movie)\n        this.savePicturesInState( result );\n            \n        //Code save data in state (List of SIMILAR movie)\n        this.saveSimilarMovieInState( result );\n        \n        //Code save data in state (List of TRAILER for movie)\n        this.saveTrailerForMovie( result );\n    }\n    \n    \n    //---------------------------------------MAIN function-------------------------------------\n    async onReSearchClick(e){\n        await this.props.setName(e);        \n        await this.setMovieWithAllData();\n        } \n           \n    render(){\n        return(\n            <div className=\"Similar\">\n                <h3>Similar movies</h3>\n                { this.props.similar ? \n                    (this.props.similar[0] ? \n                        ( this.props.similar.map( film =>( <button key={film.id}\n                                                                   type=\"button\"\n                                                                   onClick={()=>{this.onReSearchClick(film.title)}}>\n                                                    {film.title}\n                                                </button> ))) : 'Not found') : 'Searching..' }\n            </div>\n        )\n    }\n}\n\nexport default Similar;","/* eslint-disable jsx-a11y/iframe-has-title */\nimport React from 'react';\n\nclass VideoPlayeer extends React.Component{\nconstructor(props){\n    super(props);\n    this.preloaderRef = React.createRef();\n    this.customModalWindowRef = React.createRef();\n    this.overlayRef = React.createRef();\n}\npreloader(){\n    setTimeout( ()=>{\n        if(this.preloaderRef.current){\n            this.preloaderRef.current.style.opacity = '0';\n            this.preloaderRef.current.style.visibility = 'hidden';\n        }\n    }, 1500 )\n};\nopenYoutubePlayeer(){\n    this.overlayRef.current.style.display = 'block';\n    setTimeout( ()=>{\n        this.customModalWindowRef.current.style.display = 'block';\n        this.customModalWindowRef.current.style.opacity = '1';\n        if(this.props.trailer){\n            this.customModalWindowRef.current.childNodes[1].contentWindow\n                .postMessage('{\"event\":\"command\", \"func\":\"playVideo\", \"args\":\"\"}', '*');\n        }\n    }, 500 )\n}\ncloseButton(){\n    this.customModalWindowRef.current.style.display = 'none';\n    this.customModalWindowRef.current.style.opacity = '0';\n    this.overlayRef.current.style.display = 'none';\n    if(this.props.trailer){\n        this.customModalWindowRef.current.childNodes[1].contentWindow\n            .postMessage('{\"event\":\"command\", \"func\":\"pauseVideo\", \"args\":\"\"}', '*');\n    }\n}\n\n    render(){\n        return(\n            <div>\n                <div className=\"moviePoster\">\n                    <div className=\"preloader\" ref={this.preloaderRef}>\n                        <div className=\"loader\"></div>\n                    </div>\n                    <button className=\"play-button\"\n                            onClick={ ()=>{this.openYoutubePlayeer()} }>\n                    </button>\n                    <img onLoad={ (e)=>{ this.preloader(e.target)}}\n                        className={this.props.conditionClassName}\n                        src={this.props.conditionUrl}\n                        alt = 'Poster for film' />\n                </div>\n                <div className=\"modal-window-for-trailer\"\n                    ref={ this.customModalWindowRef }>\n                    <button onClick={()=>{this.closeButton()}}  className=\"closeButton\">X</button>\n                    { this.props.trailer? <iframe id=\"ytplayer\" \n                            type=\"text/html\" \n                            width=\"960\" \n                            height=\"540\"\n                            src={this.props.trailer}\n                            frameBorder=\"0\" \n                            allowFullScreen/> : <h2 className=\"trailerNotFound\">Sorry, trailer not found</h2> }\n                </div>\n                <div className=\"overlay\" ref={this.overlayRef}></div>\n            </div>\n        )\n    }\n}\n\n\n\nexport default VideoPlayeer;","/* eslint-disable react/jsx-no-comment-textnodes */\nimport React from 'react';\nimport { conditionImg } from './helpFun/conditionImg';\nimport Similar from './similar';\nimport VideoPlayeer from './videoPlayeer'\n\nclass Movie extends React.Component{\n\nrender(){\n    const title = this.props.film.movie.title;\n    const year = this.props.film.movie.year;\n    const similar = this.props.similar;\n    const trailer = this.props.trailer;\n    const [ conditionUrl, conditionClassName ] = conditionImg(this.props.url);\n    return(\n        <div className=\"OneOfMovie\">\n            \n            <VideoPlayeer trailer = { trailer }\n                          conditionClassName = { conditionClassName }\n                          conditionUrl = { conditionUrl } />\n\n            <div className=\"movieTitle\">\n                <h2>{title}</h2>\n            </div>\n\n            <div className=\"movieYear\">\n                <p>{year}</p>\n            </div>\n\n            <Similar similar={similar}\n                     setListMovie={this.props.setListMovie}\n                     setName = { this.props.setName } \n                     setPicturesMovie = { this.props.setPicturesMovie } \n                     setListSimilarMovie = { this.props.setListSimilarMovie }\n                     name = { this.props.name }\n                     listPictures = { this.props.url }\n                     setTrailerForMovie = { this.props.setTrailerForMovie }\n                     setCurrentPage = { this.props.setCurrentPage } />\n\n        </div>\n    )\n}}\n\n\nexport default Movie;","import error from '../../../img/error.svg'\n\n\nexport const conditionImg = (url)=>{\n    if(url === undefined){\n        const conditionClassName = 'moviePosterImg';\n        return ['', conditionClassName ];\n    }else if(url === ''){\n        const conditionUrl = error;\n        const conditionClassName = 'moviePosterError';\n        return [conditionUrl, conditionClassName];\n    }else{\n        const conditionUrl = url;\n        const conditionClassName = 'moviePosterImg';\n        return [conditionUrl, conditionClassName];\n    }\n}","import React from 'react';\nimport Movie from './movie';\n\n\nclass ListMovies extends React.Component{\n render(){\n    return(\n        <div>\n            {\n                this.props.currentMovies.map( (film, index) => {\n                   let i = this.props.indexOfFirstMovie + index;\n                   let currentSimilar;\n                   if(this.props.similar[i] !== undefined){\n                    currentSimilar = this.props.similar[i];\n                    currentSimilar.splice( 3, currentSimilar.length );\n                   }\n                    return <Movie film = { film } \n                                  key = { film.movie.ids.trakt }\n                                  url = { this.props.url[i] }\n                                  similar = { currentSimilar }\n                                  setName = { this.props.setName }\n                                  setListMovie = { this.props.setListMovie }\n                                  setPicturesMovie = { this.props.setPicturesMovie }\n                                  setListSimilarMovie = { this.props.setListSimilarMovie }\n                                  name = { this.props.name }\n                                  listPictures = { this.props.url }\n                                  trailer = { this.props.trailers[i] }\n                                  setTrailerForMovie = { this.props.setTrailerForMovie }\n                                  setCurrentPage = { this.props.setCurrentPage }\n                            />\n                        })\n            }\n        </div>\n    )\n  }\n}\nexport default ListMovies;","import React from 'react';\nimport Pagination from './pagination.jsx'\nimport { connect } from 'react-redux';\nimport { setCurrentPage,\n         setListMovie,\n         setPicturesMovie,\n         setListSimilarMovie,\n         setTrailerForMovie  } from '../../redux/listMovies/actions';\nimport { setName } from '../../redux/paramsMovies/actions'\nimport ListMovies from './listMovies';\n\nclass  MovieContainer extends React.Component{\nrender() {\n//GET CURRENT MOVIES\nconst indexOfLastMovie = this.props.currentPage * this.props.moviePerPage;\nconst indexOfFirstMovie = indexOfLastMovie - this.props.moviePerPage;\nconst currentMovies = this.props.listOfMovie.slice(indexOfFirstMovie, indexOfLastMovie);\nconst paginate = (pageNumber)=>{\n    this.props.setCurrentPage(pageNumber);\n} \n\n    return(\n        <div>\n            <ListMovies currentMovies = { currentMovies }\n                        url = { this.props.listOfPictures }\n                        similar = { this.props.listOfSimilarMovie }\n                        indexOfFirstMovie = { indexOfFirstMovie } \n                        setPicturesMovie = { this.props.setPicturesMovie }\n                        setListMovie = { this.props.setListMovie }\n                        setName = { this.props.setName }\n                        setListSimilarMovie = { this.props.setListSimilarMovie }\n                        name = { this.props.name }\n                        trailers = { this.props.trailers }\n                        setTrailerForMovie = { this.props.setTrailerForMovie }\n                        setCurrentPage = { this.props.setCurrentPage }  />\n\n            <Pagination moviePerPage = { this.props.moviePerPage }\n                        totalMovie = { this.props.listOfMovie.length }\n                        paginate = { paginate }    />\n        </div>\n    )\n}}\n\nconst mapStateToProps = state =>{\n    return {\n        listOfMovie: state.listMovies.listOfMovie,\n        listOfPictures: state.listMovies.listOfPictures,\n        listOfSimilarMovie: state.listMovies.listOfSimilarMovie,\n        currentPage: state.listMovies.currentPage,\n        moviePerPage: state.listMovies.moviePerPage,\n        name: state.paramsMovies.name,\n        trailers: state.listMovies.trailers,\n    };\n};\nconst mapDispatchToProps = {\n    setCurrentPage,\n    setListMovie,\n    setName,\n    setPicturesMovie,\n    setListSimilarMovie,\n    setTrailerForMovie\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieContainer)","import React from 'react';\nimport './App.css';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './redux/reducers';\nimport NavBarContainer from './components/navBar';\nimport MovieContainer from './components/items';\n\n\nconst store = createStore(rootReducer);\n\nclass App extends React.Component{\nrender(){\n  return (\n    <Provider store={store}>\n      <div className='App'>\n        <NavBarContainer />\n        <MovieContainer />\n      </div>\n    </Provider>\n  );\n}}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}