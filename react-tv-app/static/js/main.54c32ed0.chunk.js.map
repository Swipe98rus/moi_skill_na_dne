{"version":3,"sources":["img/error.svg","redux/listMovies/reducers.js","redux/reducers.js","redux/listMovies/actions.js","APIs/getMovieAPI.js","components/navBar/name/index.js","components/navBar/year/index.js","components/navBar/sort/index.js","APIs/getPicturesAPI.js","components/navBar/helpFun/getPictures.js","APIs/getSimilarMovieAPI.js","components/navBar/helpFun/getSimilar.js","components/navBar/navBar.jsx","components/navBar/index.js","components/items/pagination.jsx","components/items/movie.jsx","components/items/helpFun/conditionImg.js","components/items/listMovies.jsx","components/items/index.js","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","defaultState","listOfMovie","listOfPictures","listOfSimilarMovie","firstLoad","name","years","sort","currentPage","moviePerPage","combineReducers","movieParams","state","action","type","payload","getListOfMovies","year","a","params","query","axios","get","headers","result","data","NavBarName","onKeyPress","this","props","onSearchClick","placeholder","React","Component","NavBarYears","className","htmlFor","onChange","getValueYears","onSearchClickYears","max","min","NavBarSort","list","onInput","onChooseInput","id","getPicturesForMovie","posters","filePath","file_path","picturesPath","console","error","getPictures","pic","item","movie","ids","tmdb","push","getSimilarMovies","results","getSimilar","sim","NavBar","pictures","setPicturesMovie","similarMovie","setListSimilarMovie","setListMovie","savePicturesInState","saveMovieList","saveSimilarMovieInState","e","which","setName","target","value","setMovieWithAllData","checkInFirstLoad","valueLength","parseInt","length","style","color","setYears","setSort","listForSort","listForReset","log","sortMethod","b","reverse","NavBarContainer","mapDispatchToProps","listMovie","pict","listSimilarMOvie","boolean","connect","Pagination","pageNumbers","i","Math","ceil","totalMovie","map","pageNumb","href","key","onClick","preventDefault","paginate","Movie","preloaderRef","createRef","setTimeout","current","opacity","visibility","title","film","similar","url","undefined","conditionImg","conditionUrl","conditionClassName","ref","onLoad","preloader","src","alt","ListMovies","currentMovies","index","currentSimilar","indexOfFirstMovie","splice","trakt","MovieContainer","indexOfLastMovie","slice","pageNumber","setCurrentPage","page","store","createStore","rootReducer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.54c32ed0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/error.533ab57e.svg\";","import { \n    PUT_LIST_OF_FILM_NAME,\n    PUT_PICTURES_FOR_MOVIE,\n    PUT_SIMILAR_MOVIE,\n    PUT_YEARS_FOR_MOVIE,\n    PUT_NAME_FOR_MOVIE,\n    PUT_CHOOSE_SORT_FOR_MOVIE,\n    CHANGE_CURRENT_PAGE,\n    CHANGE_FIRST_LOAD_APP\n                            } from './actions'\n\nconst defaultState = {\n    listOfMovie: [],\n    listOfPictures: [],\n    listOfSimilarMovie: [],\n    firstLoad: true,\n    name:'',\n    years: '',\n    sort: '',\n    currentPage: 1,\n    moviePerPage: 5,\n}\n\nexport const putMoviesReducers = (state = defaultState, action)=>{\n    // eslint-disable-next-line default-case\n    switch( action.type ){\n        case PUT_LIST_OF_FILM_NAME:\n            return {\n                ...state,\n                listOfMovie: action.payload,\n            }\n        // eslint-disable-next-line no-duplicate-case\n        case PUT_PICTURES_FOR_MOVIE:\n            return {\n                ...state,\n                listOfPictures: action.payload,\n            }\n        // eslint-disable-next-line no-duplicate-case\n        case PUT_SIMILAR_MOVIE:\n            return {\n                ...state,\n                listOfSimilarMovie: action.payload,\n            }\n        // eslint-disable-next-line no-duplicate-case\n        case PUT_YEARS_FOR_MOVIE:\n            return {\n            ...state,\n            years: action.payload,\n            }\n        // eslint-disable-next-line no-duplicate-case\n        case PUT_NAME_FOR_MOVIE:\n            return {\n            ...state,\n            name: action.payload,\n            }\n        // eslint-disable-next-line no-duplicate-case\n        case PUT_CHOOSE_SORT_FOR_MOVIE:\n            return {\n            ...state,\n            sort: action.payload,\n            }\n        // eslint-disable-next-line no-duplicate-case\n        case CHANGE_CURRENT_PAGE:\n            return {\n            ...state,\n            currentPage: action.payload,\n            }\n        // eslint-disable-next-line no-duplicate-case\n        case CHANGE_FIRST_LOAD_APP:\n            return {\n            ...state,\n            firstLoad: action.payload,\n            }\n    }\n    return state;\n}","import { combineReducers } from 'redux';\nimport { putMoviesReducers } from './listMovies/reducers'\n\nexport default combineReducers({\n    movieParams: putMoviesReducers,\n})\n\n\n","export const PUT_LIST_OF_FILM_NAME = 'PUT_LIST_OF_FILM_NAME';\nexport const PUT_PICTURES_FOR_MOVIE = 'PUT_PICTURES_FOR_MOVIE';\nexport const PUT_SIMILAR_MOVIE = 'PUT_SIMILAR_MOVIE';\nexport const PUT_YEARS_FOR_MOVIE = 'PUT_YEARS_FOR_MOVIE';\nexport const PUT_NAME_FOR_MOVIE = 'PUT_NAME_FOR_MOVIE';\nexport const PUT_CHOOSE_SORT_FOR_MOVIE = 'PUT_CHOOSE_SORT_FOR_MOVIE';\nexport const CHANGE_CURRENT_PAGE = 'CHANGE_CURRENT_PAGE';\nexport const CHANGE_FIRST_LOAD_APP = 'CHANGE_FIRST_LOAD_APP';\n\n\n\nexport const setListMovie = (listMovie)=>({\n    type: PUT_LIST_OF_FILM_NAME,\n    payload: listMovie,\n})\nexport const setPicturesMovie = (pict)=>({\n    type: PUT_PICTURES_FOR_MOVIE,\n    payload: pict,\n})\nexport const setListSimilarMovie = (listSimilarMOvie)=>({\n    type: PUT_SIMILAR_MOVIE,\n    payload: listSimilarMOvie,\n})\nexport const setYears = (year)=>({\n    type: PUT_YEARS_FOR_MOVIE,\n    payload: year,\n})\nexport const setName = (name)=>({\n    type: PUT_NAME_FOR_MOVIE,\n    payload: name,\n})\nexport const setSort = (sort)=>({\n    type: PUT_CHOOSE_SORT_FOR_MOVIE,\n    payload: sort,\n})\nexport const setCurrentPage = (page)=>({\n    type: CHANGE_CURRENT_PAGE,\n    payload: page,\n})\nexport const checkInFirstLoad = (boolean)=>({\n    type: CHANGE_FIRST_LOAD_APP,\n    payload: boolean,\n})","import axios from 'axios';\n\n\nexport async function getListOfMovies(name, year){\n    let params = {};\n    if(year){\n        params = {\n            query: `${name}`,\n            years: `${year}`\n        }\n    }else{\n        params = {\n            query: `${name}`,\n        }\n    }\n\n    const result = await axios.get('https://api.trakt.tv/search/movie/',{\n    params: params,\n    headers:{\n        \"trakt-api-key\": \"f50bcef04ebc3c6fea696a2573403d0a06b8b22ebc44ebb002f93572418bef46\",\n        \"Content-type\": \"application/json\",\n        \"trakt-api-version\": 2,\n    }\n});\nreturn result.data;\n}\n\n","import React from 'react';\n\nclass NavBarName extends React.Component{\n    render(){\n        return(\n            <input  type=\"text\" \n                        name=\"searchFilm\" \n                        onKeyPress={this.props.onSearchClick}\n                        placeholder=\"Movie title\"\n                />\n        )\n    }\n}\n\nexport default NavBarName;","import React from 'react';\n\nclass NavBarYears extends React.Component{\n    render(){\n        return(\n            <div className=\"wrapYearsForm\">\n                    <label htmlFor=\"years\">optional</label>\n                    <input type=\"number\"\n                        name=\"years\"\n                        placeholder=\"Choose the year\"\n                        onChange = { this.props.getValueYears }\n                        onKeyPress = { this.props.onSearchClickYears }\n                        max=\"2019\"\n                        min=\"1970\" />\n                </div>\n        )\n    }\n}\n\nexport default NavBarYears;","import React from 'react';\n\nclass NavBarSort extends React.Component{\n    render(){\n        return(\n            <div className=\"wrapSort\">\n                <label htmlFor=\"sort\">optional</label>\n                <input list=\"sortMethod\"\n                        placeholder=\"Sort\"\n                        onInput={this.props.onChooseInput}/>\n                <datalist id=\"sortMethod\">\n                    <option>By newest</option>\n                    <option>By oldest</option>\n                </datalist>\n            </div>\n        )\n    }\n}\n\nexport default NavBarSort;","import axios from 'axios';\n\n\nexport async function getPicturesForMovie(id){\nlet picturesPath ;\ntry{\n    const result = await axios\n    .get(`https://api.themoviedb.org/3/movie/${id}/images?api_key=ee05a415e10d527c5496fb485215ff75`);\n    if(result.data.posters[0]){\n        const filePath = result.data.posters[0].file_path;\n        picturesPath = `https://image.tmdb.org/t/p/w500${filePath}`;\n    }else{\n        picturesPath = ''\n    } \n}catch(e){\n    console.error(e);\n}\n\n\nreturn picturesPath;\n}","import { getPicturesForMovie } from '../../../APIs/getPicturesAPI'\n\nexport async function getPictures (result){\n    const pic = []\n    for(let item of result){\n        pic.push( await getPicturesForMovie( item.movie.ids.tmdb ));\n    }\n    return pic;\n}\n","import axios from 'axios';\n\n\nexport async function getSimilarMovies(id){\n    let result = [];\n    try{\n        result = await axios.get(\n            `https://api.themoviedb.org/3/movie/${id}/similar?api_key=ee05a415e10d527c5496fb485215ff75&page=1`\n        );\n        if(result){\n            return result.data.results;\n        }\n    }catch(e){\n        console.error(e)\n    }\n     return result;\n}\n","import { getSimilarMovies } from '../../../APIs/getSimilarMovieAPI';\n\nexport async function getSimilar (result){\n    const sim = []\n    for(let item of result){\n        sim.push( await getSimilarMovies( item.movie.ids.tmdb ));\n    }\n    return sim;\n}","import React from 'react';\nimport { getListOfMovies } from '../../APIs/getMovieAPI';\nimport NavBarName from './name';\nimport NavBarYears from './year';\nimport NavBarSort from './sort';\nimport { getPictures } from './helpFun/getPictures'\nimport { getSimilar } from './helpFun/getSimilar'\n\n\nclass NavBar extends React.Component{\n//---------------------------------------Additional function-------------------------------------\nasync savePicturesInState( result ){\n    const pictures = await getPictures( result );\n    await this.props.setPicturesMovie( pictures );\n}\n\n\nasync saveSimilarMovieInState( result ){\n    const similarMovie = await getSimilar( result );\n    await this.props.setListSimilarMovie( similarMovie );\n}\n\n\nasync saveMovieList(){\n    if( this.props.years ){\n        //Code save data in state (List of MOVIE with YEAR)\n        const result = await getListOfMovies( this.props.name, this.props.years );\n        await this.props.setListMovie( result );\n        return result;\n    }else{\n        //Code save data in state (List of MOVIE)\n        const result = await getListOfMovies( this.props.name );\n        await this.props.setListMovie( result );\n        return result;\n    }\n}\n\n\nasync setMovieWithAllData(){\n    if( this.props.listOfPictures ){\n        await this.savePicturesInState([]);\n    }\n    const result = await this.saveMovieList();\n\n    //Code save data in state (PICTURES for movie)\n    this.savePicturesInState( result );\n        \n    //Code save data in state (List of SIMILAR movie)\n    this.saveSimilarMovieInState( result );\n}\n\n\n//---------------------------------------MAIN function-------------------------------------\nasync onSearchClick(e){\n    if( e.which === 13 ){\n        await this.props.setName( e.target.value );        \n        await this.setMovieWithAllData();\n    }\n}\nasync firstLoadingApp (){\n    await this.props.setName('');        \n    await this.setMovieWithAllData();\n    await this.props.checkInFirstLoad(false);\n}\n\n\n\nasync getValueYears(e){\n    let valueLength = parseInt( e.target.value.length );\n\n    if( valueLength > 4 ){\n        e.target.style.color = '#e17055';\n\n    // eslint-disable-next-line no-cond-assign\n    }else if( valueLength < 4 && valueLength >= 1 ){\n        e.target.style.color = '#e17055';\n\n    // eslint-disable-next-line no-cond-assign\n    }else if( valueLength === 4 ){\n        e.target.style.color = '#00b894';\n        await this.props.setYears( e.target.value );\n    \n    // eslint-disable-next-line no-cond-assign\n    }else if( valueLength === 0 ){\n        await this.props.setYears('');\n    }\n}\n\n\nonSearchClickYears(e){\n    if(e.which === 13){\n        this.setMovieWithAllData();\n    }\n}\n\n\nasync onChooseInput(e){\n    await this.props.setSort( e.target.value );\n    const listForSort = [ ...this.props.listOfMovie ];\n    const listForReset = [ ...this.props.listOfMovie ];\n    console.log(listForReset);\n    console.log(this.props.listOfMovie)\n    const sortMethod = (a, b)=>{\n        //Return by oldest\n        return( a.movie.year - b.movie.year)\n    }\n    await listForSort.sort( sortMethod );\n\n    if(this.props.sort === 'By newest'){\n        await listForSort.reverse();\n        await this.props.setListMovie( listForSort );\n\n        //Code save data in state (PICTURES for movie)\n        this.savePicturesInState( listForSort );\n\n        //Code save data in state (List of SIMILAR movie)\n        this.saveSimilarMovieInState( listForSort );\n\n    }else if(this.props.sort === 'By oldest'){\n        await this.props.setListMovie( listForSort );\n\n        //Code save data in state (PICTURES for movie)\n        this.savePicturesInState( listForSort );\n\n        //Code save data in state (List of SIMILAR movie)\n        this.saveSimilarMovieInState( listForSort );\n    }\n}\n\n\nrender() {\n    return(\n        <div className='setting' id=\"navBarSetting\">\n                <NavBarName onSearchClick={ (e)=>{ this.onSearchClick(e) }}/>\n                <NavBarYears getValueYears={ (e)=>{ this.getValueYears(e) }}\n                             onSearchClickYears={ (e)=>{ this.onSearchClickYears(e) }}/>\n                <NavBarSort onChooseInput={ (e)=>{ this.onChooseInput(e) }}/>\n        </div>\n    )\n}}\nexport default NavBar;","import React from 'react';\nimport { connect } from 'react-redux';\nimport NavBar from './navBar';\nimport { setListMovie, \n         setPicturesMovie, \n         setListSimilarMovie, \n         setYears, \n         setName,\n         setSort,\n         checkInFirstLoad      } from '../../redux/listMovies/actions';\n\nclass NavBarContainer extends React.Component{\nrender() {\n    return(\n        <NavBar name = { this.props.name }\n                years = { this.props.years }\n                listOfMovie = { this.props.listOfMovie }\n                sort = { this.props.sort }\n                setListMovie = { this.props.setListMovie }\n                setPicturesMovie = { this.props.setPicturesMovie }\n                setListSimilarMovie = { this.props.setListSimilarMovie }\n                setYears = { this.props.setYears } \n                setName = { this.props.setName }\n                setSort = { this.props.setSort }\n                checkInFirstLoad = { this.props.checkInFirstLoad } />\n    )\n}}\n\nconst mapStateToProps = state =>{\n    return {\n        name: state.movieParams.name,\n        years: state.movieParams.years,\n        listOfMovie: state.movieParams.listOfMovie,\n        sort: state.movieParams.sort,\n    };\n};\nconst mapDispatchToProps = {\n    setListMovie,\n    setPicturesMovie,\n    setListSimilarMovie,\n    setYears,\n    setName,\n    setSort,\n    checkInFirstLoad,\n};\n\nexport default connect( mapStateToProps, mapDispatchToProps )(NavBarContainer);","import React from 'react';\n\nclass Pagination extends React.Component{\nrender(){\n    const pageNumbers = [];\n\n    for(let i = 1; i <= Math.ceil(this.props.totalMovie / this.props.moviePerPage); i++){\n        pageNumbers.push(i);\n    }\n    return (\n        <div>\n            <div className=\"pagination\">\n                {pageNumbers.map( pageNumb => (\n                    <a href=\"#navBarSetting\" \n                       className=\"pageLink\" \n                       key={pageNumb}\n                       onClick={(e)=>{ e.preventDefault();\n                                       this.props.paginate(pageNumb)  }}>\n                        {pageNumb}\n                    </a>\n                ))}\n            </div>\n        </div>\n    )\n}\n}\n\nexport default Pagination;","import React from 'react';\nimport { conditionImg } from './helpFun/conditionImg';\n\nclass Movie extends React.Component{\nconstructor(props){\nsuper(props);\nthis.preloaderRef = React.createRef();\n\n}\npreloader(e){\n    setTimeout( ()=>{\n        this.preloaderRef.current.style.opacity = '0';\n        this.preloaderRef.current.style.visibility = 'hidden';\n    }, 1500 )\n}\n\nrender(){\n    const title = this.props.film.movie.title;\n    const year = this.props.film.movie.year;\n    const similar = this.props.similar;\n    const [ conditionUrl, conditionClassName ] = conditionImg(this.props.url);\n    return(\n        <div className=\"OneOfMovie\">\n\n            <div className=\"moviePoster\">\n                <div className=\"preloader\" ref={this.preloaderRef}>\n                    <div className=\"loader\"></div>\n                </div>\n                <img onLoad={ (e)=>{ this.preloader(e.target)}}\n                     className={conditionClassName}\n                     src={conditionUrl}\n                     alt = 'Poster for film' />\n            </div>\n\n            <div className=\"movieTitle\">\n                <h2>{title}</h2>\n            </div>\n\n            <div className=\"movieYear\">\n                <p>{year}</p>\n            </div>\n\n            <div className=\"Similar\">\n                <h3>Similar movies</h3>\n                { similar ? \n                    (similar[0] ? \n                        ( similar.map( film =>( <p key={film.id}>\n                                                    {film.title}\n                                                </p> ))) : 'Not found') : 'Searching..' }\n            </div>\n        </div>\n    )\n}}\n\n\nexport default Movie;","import error from '../../../img/error.svg'\n\n\nexport const conditionImg = (url)=>{\n    if(url === undefined){\n        const conditionClassName = 'moviePosterImg';\n        return ['', conditionClassName ];\n    }else if(url === ''){\n        const conditionUrl = error;\n        const conditionClassName = 'moviePosterError';\n        return [conditionUrl, conditionClassName];\n    }else{\n        const conditionUrl = url;\n        const conditionClassName = 'moviePosterImg';\n        return [conditionUrl, conditionClassName];\n    }\n}","import React from 'react';\nimport Movie from './movie';\n\n\nclass ListMovies extends React.Component{\n render(){\n    return(\n        <div>\n            {\n                this.props.currentMovies.map( (film, index) => {\n                   let i = this.props.indexOfFirstMovie + index;\n                   let currentSimilar;\n                   if(this.props.similar[i] !== undefined){\n                    currentSimilar = this.props.similar[i];\n                    currentSimilar.splice( 3, currentSimilar.length );\n                   }\n                    return <Movie film={ film } \n                                  key={ film.movie.ids.trakt }\n                                  url={ this.props.url[i] }\n                                  similar={ currentSimilar }\n                            />\n                        })\n            }\n        </div>\n    )\n  }\n}\nexport default ListMovies;","import React from 'react';\nimport Pagination from './pagination.jsx'\nimport { connect } from 'react-redux';\nimport { setCurrentPage } from '../../redux/listMovies/actions'\nimport ListMovies from './listMovies';\n\nclass  MovieContainer extends React.Component{\nrender() {\n//GET CURRENT MOVIES\nconst indexOfLastMovie = this.props.currentPage * this.props.moviePerPage;\nconst indexOfFirstMovie = indexOfLastMovie - this.props.moviePerPage;\nconst currentMovies = this.props.listOfMovie.slice(indexOfFirstMovie, indexOfLastMovie);\nconst paginate = (pageNumber)=>{\n    this.props.setCurrentPage(pageNumber);\n}\n\n    return(\n        <div>\n            <ListMovies currentMovies = { currentMovies }\n                        url = { this.props.listOfPictures }\n                        similar = { this.props.listOfSimilarMovie }\n                        indexOfFirstMovie = { indexOfFirstMovie }   />\n\n            <Pagination moviePerPage = { this.props.moviePerPage }\n                        totalMovie = { this.props.listOfMovie.length }\n                        paginate = { paginate }    />\n        </div>\n    )\n}}\n\nconst mapStateToProps = state =>{\n    return {\n        listOfMovie: state.movieParams.listOfMovie,\n        listOfPictures: state.movieParams.listOfPictures,\n        listOfSimilarMovie: state.movieParams.listOfSimilarMovie,\n        currentPage: state.movieParams.currentPage,\n        moviePerPage: state.movieParams.moviePerPage\n    };\n};\nconst mapDispatchToProps = {\n    setCurrentPage\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieContainer)","import React from 'react';\nimport './App.css';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './redux/reducers';\nimport NavBarContainer from './components/navBar';\nimport MovieContainer from './components/items';\n\n\nconst store = createStore(rootReducer);\n\nclass App extends React.Component{\nrender(){\n  return (\n    <Provider store={store}>\n      <div className='App'>\n        <NavBarContainer />\n        <MovieContainer />\n      </div>\n    </Provider>\n  );\n}}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}